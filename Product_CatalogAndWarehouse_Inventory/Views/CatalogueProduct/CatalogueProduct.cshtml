@model Product_CatalogAndWarehouse_Inventory.Models.CatalogueProductModel
@{
    ViewBag.Title = "CatalogueProduct";
}
@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger alert-dismissable">
        <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
        @ViewBag.ErrorMessage

    </div>

}
@if (ViewBag.Message != null)
{
    <div class="alert alert-success alert-dismissable">
        <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
        @ViewBag.Message

    </div>

}


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-info">
                <div class="panel-heading">

                    @ViewBag.Message1
                </div>
                    <form method="post" enctype="multipart/form-data">
                        <div class="panel-body">
                            <div class="col-lg-4">
                                <div class="panel panel-default">
                                    <div class="panel-body" style="min-height:820px">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label>Product Name:</label>
                                                @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.ProductName, "", new { @style = "color:red" })
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label>Warehouse SKU:</label>
                                                @Html.TextBoxFor(m => m.WarehouseSKU, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.WarehouseSKU, "", new { @style = "color:red" })

                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label>Description:</label>
                                                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = "Enter a message ..." })
                                            </div>

                                            <div class="form-group">
                                                <label>HS Code:</label>
                                                @Html.TextBoxFor(m => m.HSCode, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.HSCode, "", new { @style = "color:red" })
                                            </div>
                                        </div>
                                        <div class="form-group" style="text-align:center">
                                            <label>Product Dimensions:</label>
                                        </div>
                                        <hr />
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label>Width (CM):</label>
                                                @Html.TextBoxFor(m => m.Width, new { @class = "form-control", onkeypress = "return isNumberKey(event,this)" })
                                                @*@Html.ValidationMessageFor(m => m.Width, "", new { @style = "color:red" })*@
                                            </div>
                                            <div class="form-group">
                                                <label>Length (CM):</label>
                                                @Html.TextBoxFor(m => m.Length, new { @class = "form-control", onkeypress = "return isNumberKey(event,this)" })
                                                @*@Html.ValidationMessageFor(m => m.Length, "", new { @style = "color:red" })*@
                                            </div>
                                            <div class="form-group">
                                                <label>Height (CM):</label>
                                                @Html.TextBoxFor(m => m.Height, new { @class = "form-control", onkeypress = "return isNumberKey(event,this)" })
                                                @*@Html.ValidationMessageFor(m => m.Height, "", new { @style = "color:red" })*@
                                            </div>
                                            <div class="form-group">
                                                <label>MaterialComposition:</label>
                                                @Html.TextBoxFor(m => m.MaterialComposition, new { @class = "form-control" })
                                            </div>
                                            <div class="form-group">
                                                <label>Varsany Bag:</label>
                                                @Html.TextBoxFor(m => m.VarsanyBag, new { @class = "form-control" })
                                            </div>
                                            <div class="form-group">
                                                <label>Colour:</label>
                                                @Html.TextBoxFor(m => m.Colour, new { @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label>ProductWeight(KG):</label>
                                                @Html.TextBoxFor(m => m.ProductWeight, new { @class = "form-control", onkeypress = "return isNumberKey(event,this)" })
                                            </div>
                                            <div class="form-group">
                                                <label>Box Size (CM):</label>
                                                @Html.TextBoxFor(m => m.BoxSize, new { @class = "form-control", onkeypress = "return isNumberKey(event,this)" })
                                            </div>
                                            <div class="form-group">
                                                <label>Box Quantity:</label>
                                                @Html.TextBoxFor(m => m.BoxQuantity, new { @class = "form-control", onkeypress = "return isNumberintKey(event,this)" })
                                            </div>
                                            <div class="form-group">
                                                <label>Manufacturer:</label>
                                                @Html.TextBoxFor(m => m.Manufacturer, new { @class = "form-control" })
                                            </div>
                                            <div class="form-group">
                                                <label>Mailing Bag:</label>
                                                @Html.TextBoxFor(m => m.MailingBag, new { @class = "form-control" })
                                            </div>
                                            <div class="form-group">
                                                <label>Size:</label>
                                                @Html.TextBoxFor(m => m.Size, new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="panel panel-default">
                                    <div class="panel-body" style="min-height:820px">
                                        <div class="col-lg-12">
                                            <center><label for="showEasing">Cost</label></center>
                                            <div class="ibox-content">
                                            </div>
                                        </div>
                                        <div class="col-lg-12">
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label>Product Cost:</label>
                                                    @Html.TextBoxFor(m => m.ProductCost, new { @class = "form-control", id = "product_cost", oninput = "Costsection()", onkeypress = "return isNumberKey(event,this)" })
                                                    @Html.ValidationMessageFor(m => m.ProductCost, "", new { @style = "color:red" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Commision (%):</label>
                                                    @Html.TextBoxFor(m => m.Commision, new { @class = "form-control", id = "commision", oninput = "Costsection()", onkeypress = "return isNumberKey(event,this)" })
                                                </div>
                                            </div>

                                        </div>
                                        <div class="col-lg-12">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>ShippingCostf/CN:</label>
                                                    @Html.TextBoxFor(m => m.Shippingcost, new { @class = "form-control", id = "shipping_cost", oninput = "Costsection()", onkeypress = "return isNumberKey(event,this)" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Duty (%):</label>
                                                    @Html.TextBoxFor(m => m.Duty, new { @class = "form-control", id = "duty", oninput = "Costsection()", onkeypress = "return isNumberKey(event,this)" })
                                                </div>
                                            </div>

                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-12" style="text-align:center">
                                                <label>Total Cost</label>
                                            </div>
                                            <div class="col-lg-12">
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label>Chinese Yuan</label>
                                                        @Html.TextBoxFor(m => m.ChineseYuan, new { @class = "form-control", id = "chineseYuan", @readonly = true, placeholder = "0.00" })
                                                    </div>
                                                    <div class="form-group">
                                                        <label>US Dollar</label>
                                                        @Html.TextBoxFor(m => m.USDollar, new { @class = "form-control", id = "usdollar", @readonly = true, placeholder = "0.00" })
                                                    </div>
                                                    <div class="form-group">
                                                        <label>Euros</label>
                                                        @Html.TextBoxFor(m => m.Euros, new { @class = "form-control", id = "euros", @readonly = true, placeholder = "0.00" })
                                                    </div>
                                                    <div class="form-group">
                                                        <label>Total Cost</label>
                                                        @Html.TextBoxFor(m => m.TotalCost, new { @class = "form-control", id = "totalcost", @readonly = true, placeholder = "0.00" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="panel panel-default" style="min-height:820px">

                                    <div class="panel-body">
                                        <div class="col-lg-12">
                                            <label for="showEasing">Product Image</label>
                                            <div class="ibox-content">
                                            </div>
                                            <h5 style="color:grey">IMAGE FORMAT MUST BE JPG,PNG</h5>
                                            <div id="drop-zone" onclick="inputClick(event)">
                                                @if (ViewBag.imageurl != null)
                                                {

                                                    <img src="/Uploads/@ViewBag.imageurl" alt="" id="dropzone-img" />
                                                    <p></p>
                                                }
                                                else
                                                {
                                                    <img src="" alt="" id="dropzone-img" style="display:none">
                                                    <p>Drop file or click to upload</p>
                                                }
                                                @Html.TextBoxFor(m => m.ProductImage, "", new { type = "file", id = "upload-img" })

                                            </div>
                                        </div>

                                        @*@Html.ValidationMessageFor(m => m.image, "", new { @style = "color:red" })*@
                                        <div class="panel-body">
                                            <div class="infont row-col-md-6">
                                                <a href=""><i class="fa fa-trash" style="color: red;padding-top:15px;">Delete Attachment</i> </a>
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            <button class="btn btn-default" value="Cancel" type="button">Cancel</button>
                                            <button class="btn btn-primary" type="submit">@TempData["Message"]</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </form>
            </div>
        </div>
    </div>
</div>
<style>
        #drop-zone {
            max-width: 300px;
            height: 300px;
            border: solid 1px #CCC;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        #dropzone-img {
            object-fit: contain;
            width: 100%;
            height: 300px;
            /*        display: none;
    */ padding: 4px;
        }

        #upload-img {
            display: none;
        }
</style>
@section Scripts{
    <script>
        window.onload = Costsection();
        function Costsection() {

            const ProductCost = document.getElementById("product_cost").value;
            const Commision = document.getElementById("commision").value;
            const Duty = document.getElementById("duty").value;
            const ShippingCost = document.getElementById("shipping_cost").value;

            const Commision_convert = (ProductCost * Commision) / 100;
            const Duty_convert = (ProductCost * Duty) / 100;
            const ShippingCost_convert = (ProductCost * ShippingCost) / 100;

            if (ProductCost > 0 & !isNaN(Commision_convert) & !isNaN(Duty) & !isNaN(ShippingCost)/* & !Commision_convert.match(regexp)*/) {
                const ChineseYuan = 8.536;
                const USDollar = 1.241;
                const Euros = 1.139;
                const TotalProduct = parseFloat(ProductCost) + parseFloat(Commision_convert);
                const TotalProductCost = parseFloat(TotalProduct + ShippingCost_convert + Duty_convert).toFixed(2);
                document.getElementById("chineseYuan").value = (TotalProductCost * ChineseYuan).toFixed(2);
                document.getElementById("usdollar").value = (TotalProductCost * USDollar).toFixed(2);
                document.getElementById("euros").value = (TotalProductCost * Euros).toFixed(2);
                document.getElementById("totalcost").value = TotalProductCost;
                console.log(TotalProductCost);
            }
            else {
                document.getElementById("chineseYuan").value = "0.00";
                document.getElementById("usdollar").value = "0.00";
                document.getElementById("euros").value = "0.00";
                document.getElementById("totalcost").value = "0.00";
            }

        }

        function isNumberKey(evt, obj) {
            var charCode = (evt.which) ? evt.which : evt.keyCode
            var value = obj.value;
            var dotcontains = value.indexOf(".") != -1;
            if ((value.length == 0) && (event.keyCode == 46)) return false; // checking that length ==0 than not allow to enter '.'
            if (dotcontains)
                if (charCode == 46) return false;
            if (charCode == 46) return true;
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;
            return true;
        }

        function isNumberintKey(evt, obj) {
            var charCode = (evt.which) ? evt.which : evt.keyCode
            var value = obj.value;
            var dotcontains = value.indexOf != -1;
            if ((value.length == 0) && (event.keyCode == 46)) return false; // checking that length ==0 than not allow to enter '.'
            if (dotcontains)
                if (charCode == 46) return false;
            if (charCode == 46) return true;
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;
            return true;
        }

        const dropZone = document.querySelector('#drop-zone');
        const inputElement = document.getElementById('upload-img');
        const img = document.querySelector('#dropzone-img');
        let p = document.querySelector('p')

        dropZone.addEventListener('change', (e) => {
            console.log(event)
            var fileName = URL.createObjectURL(event.target.files[0]);

            var previewImg = document.getElementById("dropzone-img");
            previewImg.style.display = "block";
            previewImg.setAttribute("src", fileName);

            p.style = 'display: none';
        });
        function dragNdrop(event) {
            console.log(event)
            var fileName = URL.createObjectURL(event.target.files[0]);
            var previewImg = document.getElementById("dropzone-img");
            previewImg.style.display = "block";
            previewImg.setAttribute("src", fileName);
            p.style = 'display: none';
        }

        function inputClick() {
            /*debugger;*/
            inputElement.click()
        }

        dropZone.addEventListener('dragover', (e) => {
            e.preventDefault();
        });
        dropZone.addEventListener('drop', (e) => {
            e.preventDefault();
            img.style = "display:block;";
            let file = e.dataTransfer.files[0];

            const reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onloadend = function () {
                e.preventDefault()
                p.style = 'display: none';
                let src = this.result;
                img.src = src;
                img.alt = file.name
            }
            $("#upload-img").prop("files", e.dataTransfer.files)
            onload.ChineseYuan;
            onload.USDollar;
            onload.Euros;
        });
    </script>
}


