@model Product_CatalogAndWarehouse_Inventory.Models.ProductCatalogueModel

@{
    ViewBag.Title = "Add Catalogue Product";
}

@if (ViewBag.Message != null)
{
    <div class="alert alert-success alert-dismissable">
        <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
        @ViewBag.Message
        <a class="alert-link" href="#"></a>
    </div>
}

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger alert-dismissable">
        <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
        @ViewBag.ErrorMessage
        <a class="alert-link" href="#"></a>
    </div>
}

<div class="panel panel-info">
    <div class="panel-heading">
        Add Catalogue Product
    </div>
    <form method="post" enctype="multipart/form-data" id="myForm">
        <div class="panel-body">
            <div class="col-lg-4">
                <div class="panel panel-default">
                    <div class="panel-body" style="min-height:820px">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Product Name:</label>
                                @Html.TextBoxFor(m => m.ProductName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ProductName, "", new { @style = "color:red" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Warehouse SKU:</label>                              
                                @Html.TextBoxFor(m => m.WarehouseSKU, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.WarehouseSKU, "", new { @style = "color:red" })
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Description:</label>
                                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = "Enter a message ..." })                              
                            </div>

                            <div class="form-group">
                                <label>HS Code:</label>
                                @Html.TextBox("hscode", "", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group" style="text-align:center">
                            <label>Product Dimensions:</label>
                        </div>
                        <hr />
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Width (CM):</label>
                                @Html.TextBox("width", "", new { @class = "form-control", oninput = "totalcost()", onkeypress = "return isNumberKey(event,this)" })                              
                            </div>
                            <div class="form-group">
                                <label>Length (CM):</label>
                                @Html.TextBox("length", "", new { @class = "form-control", oninput = "totalcost()", onkeypress = "return isNumberKey(event,this)" })                               
                            </div>
                            <div class="form-group">
                                <label>Height (CM):</label>
                                @Html.TextBox("height", "", new { @class = "form-control", oninput = "totalcost()", onkeypress = "return isNumberKey(event,this)" })                         
                            </div>
                            <div class="form-group">
                                <label>Material Composition:</label>
                                @Html.TextBox("materialComposition", "", new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Varsany Bag:</label>
                                @Html.TextBox("varsanyBag", "", new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Colour:</label>
                                @Html.TextBox("colour", "", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Product Weight (KG):</label>
                                @Html.TextBox("productweight", "", new { @class = "form-control", oninput = "totalcost()", onkeypress = "return isNumberKey(event,this)" })                            
                            </div>
                            <div class="form-group">
                                <label>Box Size (CM):</label>
                                @Html.TextBox("boxsize", "", new { @class = "form-control", oninput = "totalcost()", onkeypress = "return isNumberKey(event,this)" })                     
                            </div>
                            <div class="form-group">
                                <label>Box Quantity:</label>
                                @Html.TextBox("boxquantity", "", new { @class = "form-control", oninput = "totalcost()", onkeypress = "return isNumberKeyDot(event,this)" })                                
                            </div>
                            <div class="form-group">
                                <label>Manufaturer:</label>
                                @Html.TextBoxFor(m => m.Manufaturer, "", new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Mailing Bag:</label>
                                @Html.TextBox("mailingBag", "", new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Size:</label>
                                @Html.TextBox("size", "", new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="panel panel-default">
                    <div class="panel-body" style="min-height:820px">
                        <div class="form-group" style="text-align:center">
                            <label>Cost</label>
                        </div>
                        <hr />
                        <div class="col-lg-12">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Product Cost:</label>
                                    @Html.TextBoxFor(m => m.ProductCost, new { @class = "form-control", id = "productcost", oninput = "totalcost()", onkeypress = "return isNumberKey(event,this)" })
                                    @Html.ValidationMessageFor(m => m.ProductCost, "", new { @style = "color:red" })

                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Commision (%):</label>
                                    @Html.TextBox("commision", "", new { @class = "form-control", id = "commisions", oninput = "totalcost()", onkeypress = "return isNumberKey(event,this)" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Shipping Cost f/CN:</label>
                                    @Html.TextBox("shippingCost", "", new { @class = "form-control", id = "shippingcost", oninput = "totalcost()", onkeypress = "return isNumberKey(event,this)" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Duty (%):</label>
                                    @Html.TextBox("duty", "", new { @class = "form-control", id = "duty", oninput = "totalcost()", onkeypress = "return isNumberKey(event,this)" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group" style="text-align:center">
                                <label>Total Cost</label>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Chinese Yuan</label>
                                    @Html.TextBoxFor(m => m.ChineseYuan, new { @class = "form-control", id = "chineseyuan", @readonly = true, placeholder = "0.00" })
                                </div>
                                <div class="form-group">
                                    <label>US Dollar</label>
                                    @Html.TextBoxFor(m => m.UsDollar, new { @class = "form-control", id = "usdollar", @readonly = true, placeholder = "0.00" })
                                </div>
                                <div class="form-group">
                                    <label>Euros</label>
                                    @Html.TextBoxFor(m => m.Euros, new { @class = "form-control", id = "euros", @readonly = true, placeholder = "0.00" })
                                </div>
                                <div class="form-group">
                                    <label>Total Cost</label>
                                    @Html.TextBoxFor(m => m.TotalCost, new { @class = "form-control", id = "Totalcost", @readonly = true, placeholder = "0.00" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="panel panel-default">
                    <div class="panel-body" style="min-height:820px">
                        <div class="form-group">
                            <label>Product Image</label>
                        </div>
                        <div class="ibox-content">
                            <div class="form-group">
                                <small>IMAGE FORMAT MUST BE JPG,PNG.</small>
                                <div id="dropzone">
                                    <img src="" alt="" id="dropzoneimg">
                                    <p>Drop image or click to upload</p>
                                    <input type="file" id="uploadimg" name="ImageFile" hidden />
                                </div>
                            </div>
                        </div>
                        <div class="form-group" style="margin-left:20px">                          
                            <a href=""><i class="fa fa-trash" style="color:red;">Delete Attachment</i></a>
                        </div>
                        <div class="form-group" style="margin-left:20px">
                            <button class="btn btn-white" type="button">Cancel</button>
                            <button class="btn btn-w-m btn-primary" type="submit" id="uploadedimage">Save Product</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<style>
    #dropzone {
        max-width: 320px;
        height: 320px;
        border: solid 1px #CCC;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    #dropzoneimg {
        object-fit: contain;
        width: 100%;
        height: 320px;
        display: none;
        padding: 4px;
    }

    #uploadimg {
        display: none;
    }
</style>

@section scripts{
    <script>

        function totalcost() {
            const productcost = document.getElementById('productcost').value;
            const commission_val = document.getElementById('commisions').value;
            const shipping_cost_val = document.getElementById('shippingcost').value;
            const duty_val = document.getElementById('duty').value;


            if (productcost > 0 && !isNaN(commission_val) && !isNaN(shipping_cost_val) && !isNaN(duty_val)) {
                const commission = (productcost * commission_val) / 100;
                const shipping_cost = (productcost * shipping_cost_val) / 100;
                const duty = (productcost * duty_val) / 100;
                const chineaseYuan = 8.56;
                const Usdollar = 1.24;
                const Euros = 1.14;
                const num = 9.1291754;
                // Total Product Cost = ((Product cost + Commission rate) + ( Shipping Cost f/China)) + Duty Rate
                const Totalcost = parseFloat(productcost) + parseFloat(commission);
                const ProductTotalcost = parseFloat(Totalcost + shipping_cost + duty);
                document.getElementById('Totalcost').value = ProductTotalcost.toFixed(2);
                document.getElementById('chineseyuan').value = (ProductTotalcost * chineaseYuan).toFixed(2);
                document.getElementById('usdollar').value = (ProductTotalcost * Usdollar).toFixed(2);
                document.getElementById('euros').value = (ProductTotalcost * Euros).toFixed(2);
            }
            else {
                document.getElementById('Totalcost').value = '0.00';
                document.getElementById('chineseyuan').value = '0.00';
                document.getElementById('usdollar').value = '0.00';
                document.getElementById('euros').value = '0.00';
            }
        }

        function isNumberKey(evt, obj) {
            var charCode = (evt.which) ? evt.which : evt.keyCode
            var value = obj.value;
            var dotcontains = value.indexOf(".") != -1;
            if ((value.length == 0) && (evt.keyCode == 46)) return false; // checking that length ==0 than not allow to enter '.'
            if (dotcontains)
                if (charCode == 46) return false;
            if (charCode == 46) return true;
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;
            return true;
        }

        function isNumberKeyDot(evt, obj) {
            var charCode = (evt.which) ? evt.which : evt.keyCode
            var value = obj.value;
            var dotcontains = value.indexOf("") != -1;
            if ((value.length == 0) && (evt.keyCode == 46)) return false; 
            if (dotcontains)
                if (charCode == 46) return false;
            if (charCode == 46) return true;
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;
            return true;
        }
  
        const dropZone = document.querySelector('#dropzone');
        const img = document.querySelector('#dropzoneimg');
        let p = document.querySelector('p')
        var input = document.getElementById('uploadimg');
        var drag = document.getElementById('dropzone');

        $('#uploadimg').on('change', function (e) {
            var fileName = URL.createObjectURL(e.target.files[0]);
            var previewImg = document.getElementById("dropzoneimg");
            previewImg.style.display = "block";
            previewImg.setAttribute("src", fileName);
            p.style = 'display: none';
        });

        $('#dropzone').on('click', function () {
            input.click();
        });
        $('#dropzone').on('click', function (e) {
            e.stopPropagation();
        });

        dropZone.addEventListener('dragover', (e) => {
            e.preventDefault();
        });
        dropZone.addEventListener('drop', (e) => {
            e.preventDefault();

            img.style = "display:block;";
            let fileName = e.dataTransfer.files[0];
            const reader = new FileReader();
            reader.readAsDataURL(fileName);
            reader.onloadend = function () {
                e.preventDefault()
                p.style = 'display: none';
                let src = this.result;
                img.src = src;
                img.alt = fileName.name
            }
            $("#uploadimg").prop("files", e.dataTransfer.files)
        });

        $(document).ready(function () {
            // alert box timeout for 3 sec
            setTimeout(function () {
                $('.alert').fadeOut('slow');
            }, 3000); // <-- time in milliseconds, 1000 =  1 sec
        });

    </script>
}
